/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package com.aldrin.billing.gui.dialog;

import com.aldrin.billing.dao.impl.CustomerDAOImpl;
import com.aldrin.billing.gui.JFrameApp;
import com.aldrin.billing.gui.dialog.au.JDialogCustomerAU;
import com.aldrin.billing.gui.dialog.au.InvoiceCollector;
import com.aldrin.billing.model.Customer;
import com.aldrin.billing.util.ComboBoxList;
import com.aldrin.billing.util.NumberInput;
import java.awt.Font;
import java.awt.FontMetrics;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.print.PageFormat;
import java.awt.print.Paper;
import java.awt.print.Printable;
import static java.awt.print.Printable.NO_SUCH_PAGE;
import static java.awt.print.Printable.PAGE_EXISTS;
import java.awt.print.PrinterException;
import java.awt.print.PrinterJob;
import java.io.File;
import java.text.DecimalFormat;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;

/**
 *
 * @author Java Programming with Aldrin
 */
public class JDialogPayment extends javax.swing.JDialog implements Printable {

    /**
     * Creates new form JDialogPayment
     */
    private Float grandTotal;
    private JFrameApp jFrameApp;
    private Customer customer = new Customer();
    private DecimalFormat df = new DecimalFormat("##,##0.00");
    private static String input = "";
    private Float change = 0.0F;
    private static Boolean dispense = false;
    private static Long invoiceId;
    private static Boolean printReceipt =false;
    private static Float printBillingCash =0.00f;
    private static Float printBillingChange =0.00f;

    public JDialogPayment(com.aldrin.billing.gui.JFrameApp jFrameApp, boolean modal, Float grandTotal) {
        super(jFrameApp, modal);
        initComponents();
        this.jFrameApp = jFrameApp;
        setGrandTotal(grandTotal);
        jTextFieldTotal.setText(String.valueOf(df.format(grandTotal)));
        popComboCustomer();
        jButtonPay.setEnabled(false);
        new NumberInput().doubleValidator(jTextFieldCash);
        setDispense(false);
        if (jComboBoxPaymentMethod.getSelectedIndex() == 0) {
            jTextFieldCash.setEnabled(false);
        }
        jCheckBox1.setSelected(true);
        try {
            File fontStyle = new File("src/main/resources/fonts/TitanOne-Regular.ttf");
            Font font = Font.createFont(Font.TRUETYPE_FONT, fontStyle);
            jLabelTitle.setFont(font.deriveFont(24f));
//            jButtonLogin.setFont(font.deriveFont(16f));
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel5 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jTextFieldCash = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jButtonPay = new javax.swing.JButton();
        jTextFieldChange = new javax.swing.JTextField();
        jTextFieldTotal = new javax.swing.JTextField();
        jComboBoxCustomer = new javax.swing.JComboBox<>();
        jButtonPlus = new javax.swing.JButton();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jComboBoxPaymentMethod = new javax.swing.JComboBox<>();
        jCheckBox1 = new javax.swing.JCheckBox();
        jLabelTitle = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("PAYMENT");

        jPanel5.setLayout(new java.awt.BorderLayout());

        jPanel4.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel1.setText("CUSTOMER");
        jLabel1.setPreferredSize(new java.awt.Dimension(120, 30));
        jPanel4.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 140, 100, -1));

        jLabel9.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel9.setText("CHANGE");
        jLabel9.setPreferredSize(new java.awt.Dimension(120, 30));
        jPanel4.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 290, 100, -1));

        jTextFieldCash.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jTextFieldCash.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jTextFieldCash.setPreferredSize(new java.awt.Dimension(64, 30));
        jTextFieldCash.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldCashActionPerformed(evt);
            }
        });
        jTextFieldCash.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextFieldCashKeyReleased(evt);
            }
        });
        jPanel4.add(jTextFieldCash, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 240, 280, -1));

        jLabel10.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel10.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel10.setText("TOTAL");
        jLabel10.setMaximumSize(new java.awt.Dimension(120, 60));
        jLabel10.setMinimumSize(new java.awt.Dimension(120, 60));
        jLabel10.setPreferredSize(new java.awt.Dimension(120, 30));
        jPanel4.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 90, 100, -1));

        jButtonPay.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jButtonPay.setText("Pay");
        jButtonPay.setMargin(new java.awt.Insets(2, 0, 3, 0));
        jButtonPay.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonPayActionPerformed(evt);
            }
        });
        jPanel4.add(jButtonPay, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 400, 140, 40));

        jTextFieldChange.setEditable(false);
        jTextFieldChange.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jTextFieldChange.setForeground(new java.awt.Color(0, 102, 51));
        jTextFieldChange.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jTextFieldChange.setMinimumSize(new java.awt.Dimension(64, 32));
        jTextFieldChange.setPreferredSize(new java.awt.Dimension(64, 30));
        jPanel4.add(jTextFieldChange, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 290, 280, -1));

        jTextFieldTotal.setEditable(false);
        jTextFieldTotal.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jTextFieldTotal.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jTextFieldTotal.setFocusable(false);
        jTextFieldTotal.setPreferredSize(new java.awt.Dimension(120, 30));
        jPanel4.add(jTextFieldTotal, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 90, 280, -1));

        jComboBoxCustomer.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jComboBoxCustomer.setPreferredSize(new java.awt.Dimension(72, 30));
        jComboBoxCustomer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxCustomerActionPerformed(evt);
            }
        });
        jPanel4.add(jComboBoxCustomer, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 140, 240, -1));

        jButtonPlus.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jButtonPlus.setText("+");
        jButtonPlus.setMargin(new java.awt.Insets(0, 0, 0, 0));
        jButtonPlus.setPreferredSize(new java.awt.Dimension(30, 30));
        jButtonPlus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonPlusActionPerformed(evt);
            }
        });
        jPanel4.add(jButtonPlus, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 140, -1, -1));

        jLabel12.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel12.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel12.setText("METHOD");
        jLabel12.setPreferredSize(new java.awt.Dimension(120, 30));
        jPanel4.add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 190, 100, -1));

        jLabel13.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel13.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel13.setText("AMOUNT");
        jLabel13.setPreferredSize(new java.awt.Dimension(120, 30));
        jPanel4.add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 240, 100, -1));

        jComboBoxPaymentMethod.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jComboBoxPaymentMethod.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "SELECT METHOD PAYMENT", "Cash", "Credit Card", "Debit Card", "Bank Transfer" }));
        jComboBoxPaymentMethod.setPreferredSize(new java.awt.Dimension(72, 30));
        jComboBoxPaymentMethod.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxPaymentMethodActionPerformed(evt);
            }
        });
        jPanel4.add(jComboBoxPaymentMethod, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 190, 280, -1));

        jCheckBox1.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jCheckBox1.setText("Print Receipt");
        jCheckBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox1ActionPerformed(evt);
            }
        });
        jPanel4.add(jCheckBox1, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 340, 280, 30));

        jLabelTitle.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabelTitle.setForeground(new java.awt.Color(0, 102, 153));
        jLabelTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelTitle.setText("Payment");
        jLabelTitle.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jPanel4.add(jLabelTitle, new org.netbeans.lib.awtextra.AbsoluteConstraints(7, 0, 400, 40));

        jPanel5.add(jPanel4, java.awt.BorderLayout.CENTER);

        getContentPane().add(jPanel5, java.awt.BorderLayout.CENTER);

        setSize(new java.awt.Dimension(427, 489));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonPayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonPayActionPerformed
        int reply = JOptionPane.showConfirmDialog(jFrameApp, "Are you sure to add the payments?", "Confirmation!!", JOptionPane.YES_NO_OPTION);
        if (reply == JOptionPane.YES_OPTION) {
            Customer customer = new Customer();
            Float cash = Float.parseFloat(jTextFieldCash.getText());
            Float change = Float.parseFloat(jTextFieldChange.getText());
            
            setPrintBillingCash(cash);
            setPrintBillingChange(change);
            InvoiceCollector pc = new InvoiceCollector(cash, this.customer, change, getGrandTotal(), jComboBoxPaymentMethod.getSelectedItem().toString());
            pc.setPaymentCollector(pc);
            setDispense(true);
            dispose();

            if (jCheckBox1.isSelected() == true) {
                setPrintReceipt(true);
            } else {
                setPrintReceipt(false);
            }
        }


    }//GEN-LAST:event_jButtonPayActionPerformed

    private void jTextFieldCashActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldCashActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldCashActionPerformed

    private void jComboBoxCustomerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxCustomerActionPerformed
        CustomerDAOImpl customerDAOImpl = new CustomerDAOImpl();
        Customer p = new Customer();
        Object selectedItem = jComboBoxCustomer.getSelectedItem();
        if (selectedItem != null) {
            ComboBoxList pId = (ComboBoxList) this.jComboBoxCustomer.getSelectedItem();
            p.setId(pId.getId());
            p = customerDAOImpl.findCustomerById(p);
            this.customer = p;
        } else {
            return;
        }
//        if (jComboBoxCustomer.getSelectedItem().toString().isEmpty() || jComboBoxCustomer.getSelectedItem().toString().equals(null) || jComboBoxCustomer.getSelectedItem() == null) {
//
//        } else {
//
//        }
    }//GEN-LAST:event_jComboBoxCustomerActionPerformed

    private void jButtonPlusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonPlusActionPerformed
        JDialogCustomerAU customerAU = new JDialogCustomerAU(jFrameApp, true);
        customerAU.setVisible(true);
        popComboCustomer();
    }//GEN-LAST:event_jButtonPlusActionPerformed

    private void jTextFieldCashKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldCashKeyReleased
        Float change = 0.0F;
        Float cash = 0.0F;

        if (jTextFieldCash.getText().length() < 1) {
            cash = 0.0F;
            jTextFieldChange.setText("0.00");
            return;
        } else {
            cash = Float.parseFloat(jTextFieldCash.getText());
        }
        jTextFieldChange.setText(String.valueOf(df.format(change)));
        if ((change >= 0) && (jComboBoxCustomer.getSelectedIndex() != 0)) {
            jComboBoxCustomer.setEnabled(true);
            jCheckBox1.setEnabled(true);
        } else {
//            jButtonPayment.setEnabled(false);
            jComboBoxCustomer.setEnabled(false);
        }
        this.setInput(jTextFieldCash.getText());
        inputNumber();
    }//GEN-LAST:event_jTextFieldCashKeyReleased

    private void jComboBoxPaymentMethodActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxPaymentMethodActionPerformed
        if (jComboBoxPaymentMethod.getSelectedIndex() > 0) {
            jTextFieldCash.setEnabled(true);
        }
    }//GEN-LAST:event_jComboBoxPaymentMethodActionPerformed

    private void jCheckBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jCheckBox1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonPay;
    private javax.swing.JButton jButtonPlus;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JComboBox<Object> jComboBoxCustomer;
    private javax.swing.JComboBox<String> jComboBoxPaymentMethod;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel jLabelTitle;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JTextField jTextFieldCash;
    private javax.swing.JTextField jTextFieldChange;
    private javax.swing.JTextField jTextFieldTotal;
    // End of variables declaration//GEN-END:variables

    private CustomerDAOImpl customerDAOImpl = new CustomerDAOImpl();

    private void popComboCustomer() {
        this.jComboBoxCustomer.removeAllItems();
        customerDAOImpl.comboBoxCustomer();
        for (ComboBoxList a : customerDAOImpl.getList()) {
            this.jComboBoxCustomer.addItem(a);
        }
    }

    /**
     * @return the grandTotal
     */
    public Float getGrandTotal() {
        return grandTotal;
    }

    /**
     * @param grandTotal the grandTotal to set
     */
    public void setGrandTotal(Float grandTotal) {
        this.grandTotal = grandTotal;
    }

    private void inputNumber() {
        Double change = 0.0;
        Double cash = 0.0;

        if (getInput().isEmpty()) {
            cash = 0.0;
            jTextFieldChange.setText("0.00");
            return;
        } else {
            jTextFieldCash.setText(getInput());
            cash = Double.parseDouble(jTextFieldCash.getText());
            change = cash - getGrandTotal();
//            panelCashier.setChange(change);
        }

        jTextFieldChange.setText(String.valueOf(df.format(change)));

        if (change >= 0) {
//            jButtonPayment.setEnabled(true);
            jButtonPay.setEnabled(true);
        } else if (change == 0) {
//            jButtonPayment.setEnabled(true);
            jButtonPay.setEnabled(true);
        } else {
//            jButtonPayment.setEnabled(false);
            jButtonPay.setEnabled(false);
        }
    }

    /**
     * @return the input
     */
    public static String getInput() {
        return input;
    }

    /**
     * @param aInput the input to set
     */
    public static void setInput(String aInput) {
        input = aInput;
    }

    /**
     * @return the dispense
     */
    public static Boolean getDispense() {
        return dispense;
    }

    /**
     * @param aDespense the dispense to set
     */
    public static void setDispense(Boolean aDespense) {
        dispense = aDespense;
    }

    @Override
    public int print(Graphics graphics, PageFormat pageFormat, int pageIndex) throws PrinterException {
        Float totalAmount = 0.0F;
        Float change = 0.0F;
        String readFile = System.getProperty("user.dir") + "/src/main/resources/images/my pic.png";
        ImageIcon icon = new ImageIcon(readFile);
        int result = NO_SUCH_PAGE;
        if (pageIndex == 0) {

            Graphics2D g2d = (Graphics2D) graphics;
            double width = pageFormat.getImageableWidth();
            g2d.translate((int) pageFormat.getImageableX(), (int) pageFormat.getImageableY());

            FontMetrics metrics = g2d.getFontMetrics(new Font("Arial", Font.BOLD, 7));
            try {
                int y = 15;
                int yShift = 10;
                int headerRectHeight = 15;
                g2d.translate((int) pageFormat.getImageableX(), (int) pageFormat.getImageableY());
                double wh = pageFormat.getImageableWidth();
                double ht = pageFormat.getImageableHeight();
                g2d.drawImage(null, 0, 0, (int) wh, (int) ht, null);

                g2d.setFont(new Font("Monospaced", Font.PLAIN, 9));
                g2d.drawImage(icon.getImage(), 75, 20, 30, 30, rootPane);
                y += yShift + 30;
                g2d.drawString("------------------------------", 10, y);
                y += yShift;
                g2d.drawString(" Java Programming with Aldrin", 10, y);
                y += yShift;
                g2d.drawString("  Rufino St.,Legaspi Village ", 10, y);
                y += yShift;
                g2d.drawString("   Makati City, Metro Manila ", 10, y);
                y += yShift;
                y += yShift;
                y += yShift;
                g2d.drawString("------------------------------", 10, y);
                y += headerRectHeight;

                g2d.drawString(" Product                 Price  ", 10, y);
                y += yShift;
                g2d.drawString("------------------------------", 10, y);
                y += headerRectHeight;
                PrintBilling pb = new PrintBilling();
                for (PrintBilling item : pb.printBillingReceipt(getInvoiceId())) {
                    g2d.drawString(" " + item.getProductName() + "                    ", 10, y);
                    y += yShift;
                    g2d.drawString("     " + item.getQuantity() + " x " + item.getUnitPrice(), 5, y);
                    g2d.drawString(String.valueOf(df.format(item.getQuantity() * item.getUnitPrice())), 130, y);
                    y += yShift;
                    totalAmount = totalAmount + (item.getQuantity() * item.getUnitPrice());

                }
                Float cash = Float.parseFloat(jTextFieldCash.getText());

                g2d.drawString("------------------------------", 10, y);
                y += yShift;
                g2d.drawString(" Total   :            " + String.valueOf(df.format(totalAmount)) + "   ", 10, y);
                y += yShift;
                g2d.drawString("------------------------------", 10, y);
                y += yShift;
                g2d.drawString(" Cash    :            " + String.valueOf(df.format(cash)) + "   ", 10, y);
                y += yShift;
                g2d.drawString("------------------------------", 10, y);
                y += yShift;
                g2d.drawString(" Change  :            " + String.valueOf(df.format(Float.parseFloat(jTextFieldCash.getText()) - totalAmount)) + "   ", 10, y);
                y += yShift;
                y += yShift;
                y += yShift;

                g2d.drawString("******************************", 10, y);
                y += yShift;
                g2d.drawString("    THANK YOU, COME AGAIN!!    ", 10, y);
                y += yShift;
                g2d.drawString("******************************", 10, y);
                y += yShift;

            } catch (Exception e) {
                e.printStackTrace();
            }
            result = PAGE_EXISTS;
        }
        return result;
    }

    public PageFormat getPageFormat(PrinterJob pj) {

        PageFormat pf = pj.defaultPage();
        Paper paper = pf.getPaper();

        double width = pf.getImageableWidth();
        double height = pf.getImageableHeight();
        paper.setSize(width, height);
        paper.setImageableArea(0, 10, width, height - cm_to_pp(1));
        pf.setOrientation(PageFormat.PORTRAIT);
        pf.setPaper(paper);
        return pf;
    }

    protected static double cm_to_pp(double cm) {
        return toPPI(cm * 0.393600787);
    }

    protected static double toPPI(double inch) {
        return inch * 58d;
    }

    /**
     * @return the invoiceId
     */
    public static Long getInvoiceId() {
        return invoiceId;
    }

    /**
     * @param aInvoiceId the invoiceId to set
     */
    public static void setInvoiceId(Long aInvoiceId) {
        invoiceId = aInvoiceId;
    }

    /**
     * @return the printReceipt
     */
    public static Boolean getPrintReceipt() {
        return printReceipt;
    }

    /**
     * @param aPrintReceipt the printReceipt to set
     */
    public static void setPrintReceipt(Boolean aPrintReceipt) {
        printReceipt = aPrintReceipt;
    }

    /**
     * @return the printBillingChange
     */
    public static Float getPrintBillingChange() {
        return printBillingChange;
    }

    /**
     * @param aPrintBillingChange the printBillingChange to set
     */
    public static void setPrintBillingChange(Float aPrintBillingChange) {
        printBillingChange = aPrintBillingChange;
    }

    /**
     * @return the printBillingCash
     */
    public static Float getPrintBillingCash() {
        return printBillingCash;
    }

    /**
     * @param aPrintBillingCash the printBillingCash to set
     */
    public static void setPrintBillingCash(Float aPrintBillingCash) {
        printBillingCash = aPrintBillingCash;
    }

}
